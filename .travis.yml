
language: java

jdk:
  - oraclejdk8


install: pip install -r StormClustering/requirements.txt

before_script:
  - npm install python  
  - pip install virtualenv
  - cd StormClustering
  - virtualenv env
  - source env/bin/activate
  - pip install nose
  - pip install BeautifulSoup4
  - pip install Flask-SQLAlchemy
  -  install python

script: nosetests StormClustering.py

before_install: cd STORM_CLUSTERING

before_deploy:
  - cd ..
  - zip -r SGA_TeamAurora_StormClustering.zip StormClustering appspec.yml || true
  - mkdir -p "dpl_cd_upload"
  - mv SGA_TeamAurora_StormClustering.zip dpl_cd_upload/SGA_TeamAurora_StormClustering.zip || true

deploy:
  - provider: s3
    access_key_id: $AWS_ACCESS_KEY_ID
    secret_access_key: $AWS_SECRET_ACCESS_KEY
    bucket: teamaurorabucket
    skip_cleanup: true
    local-dir: dpl_cd_upload
    upload-dir: build/libs/storm_clustering
    acl: public_read
    detect_encoding: true
    on: 
      branch: Milestone_1
      
  - provider: codedeploy
    access_key_id: $AWS_ACCESS_KEY_ID
    secret_access_key: $AWS_SECRET_ACCESS_KEY
    bucket: teamaurorabucket
    key: build/libs/storm_clustering/SGA_TeamAurora_StormClustering.zip
    bundle_type: zip
    application: TeamAurora
    deployment_group: TeamAurora
    region: us-west-2
    on:
      branch: Milestone_1
      

after_deploy:
  - echo "Performing after deploy procedures..."
  - done
  
notifications:
  email:
    - sriksrin@iu.edu
